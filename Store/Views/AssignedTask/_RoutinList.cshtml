@model Store.Models.Stores.AssignedWorkorderViewModel
<style>
    form {
        text-align: right !important;
    }

    .ExtraSmallmargin {
        margin-bottom: -20px;
    }

    .smallMargin {
        margin-bottom: -30px;
    }

    .margin_left_right {
        margin-right: -15px;
        margin-left: -15px;
    }

    .Page_FontSize {
        font-size: xx-small;
    }

    .form-group {
        font-size: xx-small;
    }

    .form-control {
        font-size: xx-small;
    }

    .select2-results {
        font-size: xx-small;
    }
</style>


<div class="row">
    @for (int i = 0; i < Model.RoutineModel.ToList().Count; i++)
    {

    <div class="white-box row col-md-3 Page_FontSize" style="background-color:#edf1f5!important;">

        @using (Ajax.BeginForm("EditRoutin", "AssignedTask", null, new AjaxOptions { Url = "/AssignedTask/EditRoutin", HttpMethod = "Post", OnSuccess = "editSuccess" }, new { @enctype = "multipart/form-data", id = "form", @class = "" }))
        {
            <input type="hidden" name="Id" value="@Model.RoutineModel[i].RoutineId" />

            <h6 class="price-lable text-white  btn-rounded bg-warning" style="text-align: center;">@Model.RoutineModel[i].RoutineTitle</h6>
            <br />
            <br />
            
            <div class="row ExtraSmallmargin margin_left_right">
                <div class="form-group col-md-12 col-lg-12 col-sm-12 col-xl-12 ">

                    @Html.LabelFor(model => model.RoutineModel[i].ShamsiDate, new { @class = "col-sm-6 col-form-label " })
                    @Html.EditorFor(model => model.RoutineModel[i].EditDate, new { @class = "form-control" })

                </div>
            </div>
            <div class="row ExtraSmallmargin margin_left_right">
                <div class="form-group col-md-12 col-lg-12 col-sm-12 col-xl-12 ">

                    @Html.LabelFor(model => model.RoutineModel[i].UserIds, new { @class = "col-sm-6 col-form-label " })
                    @Html.DropDownListFor(model => model.RoutineModel[i].UserIds, Model.Personnels, new { @class = "select2 m-b-10 select2-multiple", @multiple = "multiple", Name = "UserIds" })

                </div>
            </div>
            <div class="form-actions">
                <button type="submit" class="btn btn-success btn-rounded" style="font-size:xx-small"> <i class="fa fa-check"></i> ویرایش</button>
                <a class="btn btn-danger waves-effect waves-light btn-rounded" style="font-size:xx-small" href="javascript:void()" onclick="RemoveRoutin(@(Model.RoutineModel[i].RoutineId))"><i class="fa fa-times"></i> حذف</a>

            </div>
        }
    </div>


    }
    
    @if (Model.RoutineModel.Count == 0)
    {
        <div class="alert alert-warning alert-dismissable col-lg-12">
            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
            آیتمی جهت نمایش وجود ندارد.
        </div>
    }

</div>



@for (int i = 0; i < Model.RoutineModel.ToList().Count; i++)
{
    <script>
        $(document).ready(function () {

          var roleSelected = @Html.Raw(Json.Encode(Model.RoutineModel[i].UserSelected));

            $("#RoutineModel_@(i)__UserIds").val(roleSelected).trigger("change");


     });
    </script>
}

<script>
    $(document).ready(function () {
        $(".select2").select2("destroy");
        $(".select2").select2();
    });
</script>

